# vim: filetype=sh
#
# This file is read second (and per domain if running with the -a option)
# and overwrites any settings from the first file
#
# Uncomment and modify any variables you need
# see https://github.com/srvrco/getssl/wiki/Config-variables for details
# see https://github.com/srvrco/getssl/wiki/Example-config-files for example configs
#
# The staging server is best for testing
#CA="https://acme-staging-v02.api.letsencrypt.org"
# This server issues full certificates, however has rate limits
CA="https://acme-v02.api.letsencrypt.org"

# Private key types - can be rsa, prime256v1, secp384r1 or secp521r1
PRIVATE_KEY_ALG="rsa"

# Additional domains - this could be multiple domains / subdomains in a comma separated list
# Note: this is Additional domains - so should not include the primary domain.
SANS="mail.estiym.com,imap.estiym.com,smtp.estiym.com, www.estiym.com"

# Acme Challenge Location. The first line for the domain, the following ones for each additional domain.
# If these start with ssh: then the next variable is assumed to be the hostname and the rest the location.
# An ssh key will be needed to provide you with access to the remote server.
# Optionally, you can specify a different userid for ssh/scp to use on the remote server before the @ sign.
# If left blank, the username on the local server will be used to authenticate against the remote server.
# If these start with ftp: then the next variables are ftpuserid:ftppassword:servername:ACL_location
# These should be of the form "/path/to/your/website/folder/.well-known/acme-challenge"
# where "/path/to/your/website/folder/" is the path, on your web server, to the web root for your domain.
# You can also user WebDAV over HTTPS as transport mechanism. To do so, start with davs: followed by username,
# password, host, port (explicitly needed even if using default port 443) and path on the server.
#ACL=('/var/www/estiym.com/web/.well-known/acme-challenge'
#ACL=('ssh:root@mail.estiym.com:/srv/www/virtual/estiym.com/www/html/.well-known/acme-challenge'
#ACL=('ssh:root@mail.estiym.com:/srv/www/virtual/com/estiym/html/.well-known/acme-challenge'
#'ssh:root@mail.estiym.com:/srv/www/virtual/estiym.com/mail/html/.well-known/acme-challenge'
#'ssh:root@mail.estiym.com:/srv/www/virtual/estiym.com/imap/html/.well-known/acme-challenge'
#'ssh:root@mail.estiym.com:/srv/www/virtual/estiym.com/smtp/html/.well-known/acme-challenge'
#'ssh:root@mail.estiym.com:/srv/www/virtual/com/estiym/html/.well-known/acme-challenge'
ACL=('ssh:root@mail.estiym.com:/var/www/html/.well-known/acme-challenge')
#/srv/www/virtual/com/estiym/html/.well-known/acme-challenge/MeUa-yV84nBc9P2GyN5k1m0y-tXWd9I80eMxD6RR42Y
#     'ssh:sshuserid@server5:/var/www/estiym.com/web/.well-known/acme-challenge'
#     'ftp:ftpuserid:ftppassword:estiym.com:/web/.well-known/acme-challenge'
#     'davs:davsuserid:davspassword:{DOMAIN}:443:/web/.well-known/acme-challenge')

# Specify SSH options, e.g. non standard port in SSH_OPTS
# (Can also use SCP_OPTS and SFTP_OPTS)
# SSH_OPTS=-p 12345

# Set USE_SINGLE_ACL="true" to use a single ACL for all checks
USE_SINGLE_ACL="true"

# Location for all your certs, these can either be on the server (full path name)
# or using ssh /sftp as for the ACL
#DOMAIN_CERT_LOCATION="/etc/ssl/estiym.com.crt" # this is domain cert
#DOMAIN_KEY_LOCATION="/etc/ssl/estiym.com.key" # this is domain key
#CA_CERT_LOCATION="/etc/ssl/chain.crt" # this is CA cert
#DOMAIN_CHAIN_LOCATION="" # this is the domain cert and CA cert
#DOMAIN_PEM_LOCATION="" # this is the domain key, domain cert and CA cert

# The command needed to reload apache / nginx or whatever you use
#RELOAD_CMD=""

# Uncomment the following line to prevent non-interactive renewals of certificates
#PREVENT_NON_INTERACTIVE_RENEWAL="true"

# Define the server type. This can be https, ftp, ftpi, imap, imaps, pop3, pop3s, smtp,
# smtps_deprecated, smtps, smtp_submission, xmpp, xmpps, ldaps or a port number which
# will be checked for certificate expiry and also will be checked after
# an update to confirm correct certificate is running (if CHECK_REMOTE) is set to true
#SERVER_TYPE="http"
CHECK_REMOTE="false"
#CHECK_REMOTE_WAIT="2" # wait 2 seconds before checking the remote server
